{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",    
    "configurations": [
        {
            "name": "Debug convert",
            "type": "debugpy",
            "request": "launch",
            "program": "data/coco2qwen.py",
            "args": [
                "/data/coco/annotations/refclef/instances.json",
                "test.json", 
                "--root", "coco/saiapr_tc-12", 
            ]
        },
        {
                "name": "Train",
                "type": "debugpy",
                "request": "launch",
                "program": "${workspaceFolder}/llava/train/train.py",
                "args": [
                    //"--deepspeed", "./scripts/zero3.json",
                    "--model_name_or_path", "/data/huggingface/llava-onevision-qwen2-7b-ov",
                    "--version", "qwen_1_5",
                    "--data_path", "/home/shenli/Project/LLaVA-NeXT/scripts/train/ov_visual_prompt.yaml",
                    "--image_folder", "/data",
                    "--vision_tower", "/data/huggingface/siglip-so400m-patch14-384",
                    "--mm_projector_type", "mlp2x_gelu",
                    "--mm_vision_select_layer", "-2",
                    "--mm_use_im_start_end", "False",
                    "--mm_use_im_patch_token", "False",
                    "--image_aspect_ratio", "anyres_max_9",
                    "--group_by_modality_length", "True",
                    "--bf16", "True",
                    "--output_dir", "./checkpoints/debug",
                    "--num_train_epochs", "1",
                    "--per_device_train_batch_size", "1",
                    "--per_device_eval_batch_size", "4",
                    "--gradient_accumulation_steps", "1",
                    "--evaluation_strategy", "no",
                    "--save_strategy", "steps",
                    "--save_steps", "1000",
                    "--save_total_limit", "1",
                    "--learning_rate", "1e-5",
                    "--weight_decay", "0.",
                    "--warmup_ratio", "0.03",
                    "--lr_scheduler_type", "cosine",
                    "--logging_steps", "1",
                    "--tf32", "True",
                    "--model_max_length", "2048",
                    "--gradient_checkpointing", "True",
                    "--dataloader_num_workers", "4",
                    "--lazy_preprocess", "True",
                    "--report_to", "wandb",
                    "--mm_tunable_parts", "mm_vision_tower,mm_mlp_adapter,mm_language_model",
                    "--mm_vision_tower_lr", "2e-6",
                    "--image_grid_pinpoints", "(1x1),...,(6x6)",
                    "--mm_patch_merge_type", "spatial_unpad",
                    "--run_name", "debug",
                    "--torch_compile", "False",
                    "--torch_compile_backend", "inductor",
                    "--dataloader_drop_last", "True",
                    "--frames_upbound", "32",
                    "--verbose_logging", "True"
                ],
                "env": {
                    "PROMPT_VERSION": "qwen_1_5",
                    "PREV_STAGE_CHECKPOINT": "/data/huggingface/llava-onevision-qwen2-7b-ov",
                    "VISION_MODEL_VERSION": "/data/huggingface/siglip-so400m-patch14-384",
                    "RUN_NAME": "debug",
                    "PYTHONPATH": "${workspaceFolder}",
                    "CUDA_VISIBLE_DEVICES": "1",
                    //"WANDB_MODE": "offline",
                    //"WANDB_DIR": "/tmp",
                    //"WANDB_START_METHOD": "thread",
                    "WANDB_API_KEY": "11f597b2970659883b6f4f727554d6c9ca51c6dd"
                    //"DEEPSPEED_DISABLE_MPI": "True",
                    //"TMPDIR": "/tmp"
                },
                "console": "integratedTerminal"
            },
        {
            "name": "Debug current file",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "args": []
        },
    ]
    
}